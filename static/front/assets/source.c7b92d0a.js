function f(e,t){if(!Boolean(e))throw new Error(t)}class P{constructor(t,n,i){this.start=t.start,this.end=n.end,this.startToken=t,this.endToken=n,this.source=i}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class R{constructor(t,n,i,s,r,o){this.kind=t,this.start=n,this.end=i,this.line=s,this.column=r,this.value=o,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const g={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},D=new Set(Object.keys(g));function U(e){const t=e==null?void 0:e.kind;return typeof t=="string"&&D.has(t)}var I;(function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"})(I||(I={}));var m;(function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"})(m||(m={}));function E(e){return e===9||e===32}function y(e){return e>=48&&e<=57}function O(e){return e>=97&&e<=122||e>=65&&e<=90}function j(e){return O(e)||e===95}function M(e){return O(e)||y(e)||e===95}function Y(e){var t;let n=Number.MAX_SAFE_INTEGER,i=null,s=-1;for(let o=0;o<e.length;++o){var r;const a=e[o],c=d(a);c!==a.length&&(i=(r=i)!==null&&r!==void 0?r:o,s=o,o!==0&&c<n&&(n=c))}return e.map((o,a)=>a===0?o:o.slice(n)).slice((t=i)!==null&&t!==void 0?t:0,s+1)}function d(e){let t=0;for(;t<e.length&&E(e.charCodeAt(t));)++t;return t}function B(e){if(e==="")return!0;let t=!0,n=!1,i=!0,s=!1;for(let r=0;r<e.length;++r)switch(e.codePointAt(r)){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 11:case 12:case 14:case 15:return!1;case 13:return!1;case 10:if(t&&!s)return!1;s=!0,t=!0,n=!1;break;case 9:case 32:n||(n=t);break;default:i&&(i=n),t=!1}return!(t||i&&s)}function k(e,t){const n=e.replace(/"""/g,'\\"""'),i=n.split(/\r\n|[\n\r]/g),s=i.length===1,r=i.length>1&&i.slice(1).every(N=>N.length===0||E(N.charCodeAt(0))),o=n.endsWith('\\"""'),a=e.endsWith('"')&&!o,c=e.endsWith("\\"),T=a||c,p=!(t!=null&&t.minimize)&&(!s||e.length>70||T||r||o);let l="";const S=s&&E(e.charCodeAt(0));return(p&&!S||r)&&(l+=`
`),l+=n,(p||T)&&(l+=`
`),'"""'+l+'"""'}const _=10,h=2;function A(e){return u(e,[])}function u(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return x(e,t);default:return String(e)}}function x(e,t){if(e===null)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(b(e)){const i=e.toJSON();if(i!==e)return typeof i=="string"?i:u(i,n)}else if(Array.isArray(e))return L(e,n);return F(e,n)}function b(e){return typeof e.toJSON=="function"}function F(e,t){const n=Object.entries(e);if(n.length===0)return"{}";if(t.length>h)return"["+V(e)+"]";const i=n.map(([s,r])=>s+": "+u(r,t));return"{ "+i.join(", ")+" }"}function L(e,t){if(e.length===0)return"[]";if(t.length>h)return"[Array]";const n=Math.min(_,e.length),i=e.length-n,s=[];for(let r=0;r<n;++r)s.push(u(e[r],t));return i===1?s.push("... 1 more item"):i>1&&s.push(`... ${i} more items`),"["+s.join(", ")+"]"}function V(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if(t==="Object"&&typeof e.constructor=="function"){const n=e.constructor.name;if(typeof n=="string"&&n!=="")return n}return t}const v=function(t,n){return t instanceof n};class C{constructor(t,n="GraphQL request",i={line:1,column:1}){typeof t=="string"||f(!1,`Body must be a string. Received: ${A(t)}.`),this.body=t,this.name=n,this.locationOffset=i,this.locationOffset.line>0||f(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||f(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function J(e){return v(e,C)}export{m as K,P as L,I as O,g as Q,C as S,R as T,A as a,y as b,j as c,f as d,Y as e,M as f,J as g,v as h,U as i,B as j,k as p};
