const i=t=>t?t.charAt(0).toUpperCase()+t.slice(1).toLowerCase():"",l=t=>t==t.toUpperCase()&&t!=t.toLowerCase(),p=t=>[Object,Array].includes((t||{}).constructor)&&!Object.entries(t||{}).length,h=(t,s=2)=>{if(t===0||!t)return"0 Bytes";const e=1024,r=s<0?0:s,o=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],n=Math.floor(Math.log(t)/Math.log(e));return`${parseFloat((t/Math.pow(e,n)).toFixed(r))} ${o[n]}`},B=t=>{let s=-1,e=0;const r=[];for(let o=0;o<t.length;o++){const n=t[o];if(n==="{")e===0&&(s=o),e++;else if(n==="}"&&(e--,!(e<0))){if(e===0){const a=t.slice(s,o+1);try{r.push(JSON.parse(a))}catch(c){console.error(c)}}}}return r};export{l as a,i as c,h as f,p as i,B as m};
