import{c as y,i as k}from"./utils.c9742588.js";import{K as t}from"./source.c7b92d0a.js";const T=["Int","FLoat","String","Boolean","ID"],p=(r,e=[])=>{let n=!1,a=!1;const s=(l,u=0)=>{switch(l.kind){case"NamedType":return l.name.value;case"ListType":return(u===0||u===1)&&(a=!0),s(l.type,u++);case"NonNullType":return u===0&&(n=!0),s(l.type,u++)}},m=s(r),i=e.includes(m);return{type:m,isScalar:i,isRequired:n,isList:a}},N=(r,e,n="",a="0")=>{if(a==="0"&&(n=y(e.operation)),!e.selectionSet)return;const s=r.filter(i=>i.kind==="ScalarTypeDefinition").map(i=>i.name.value).concat(T);return e.selectionSet.selections.map((i,l)=>{var o;const d=r.find(c=>c.name.value===n).fields.find(c=>c.name.value===i.name.value).type,v=p(d,s);return{key:`${a}-${l}`,fieldName:i.name.value,fieldType:v,directiveNames:(o=e.directives)==null?void 0:o.map(c=>c.name.value),children:N(r,i,v.type,`${a}-${l}`)}})},$=r=>{const e=f(r),n=e==null?void 0:e.find(a=>a.name==="rbac");return n==null?void 0:n.args.map(a=>({key:a.name,value:a.value})).at(0)},I=r=>r?r.map(e=>{const{type:n,isRequired:a}=p(e.type);return{key:e.variable.name.value,name:e.variable.name.value,position:"path",type:n,isRequired:a,directives:f(e.directives)}}):[],f=r=>{if(!!r)return r.map(e=>{const n=S(e.arguments);return{name:e.name.value,args:n,payload:n.map(a=>a.rendered)}})},S=r=>k(r)?[]:r.map(e=>{let n;switch(e.value.kind){case t.INT:case t.FLOAT:case t.STRING:case t.ENUM:n=e.value.value;break;case t.LIST:n=e.value.values.map(s=>{if(s.kind===t.ENUM)return s.value});break}let a="";switch(e.value.kind){case t.STRING:a=`${e.name.value}: "${e.value.value}"`;break;case t.INT:case t.FLOAT:case t.ENUM:a=`${e.name.value}: ${e.value.value}`;break;case t.LIST:a=`${e.value.values.map(s=>{if(s.kind===t.ENUM)return s.value}).join(", ")}`;break}return{name:e.name.value,value:n,rendered:a}});export{N as a,$ as b,I as p};
