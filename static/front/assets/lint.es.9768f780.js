import{C as d}from"./codemirror.es.f74c380b.js";import{o as P}from"./types.es.1cfada6d.js";import{C as b,R as y,P as c}from"./Range.es.dcc00501.js";import{v as E,N as S,s as T,r as I,E as U,K as Q,L as A,U as G,t as x,u as V,w as q,x as W,y as _,z as k,A as K,P as O,B as H,C as Y}from"./index.5bf4d2ac.js";import"./index.bb86fbbf.js";import{p as F}from"./printer.6dfbd086.js";import{p as $,G as j}from"./parser.416ca819.js";import{K as z}from"./source.c7b92d0a.js";import"./index.4a2fd767.js";import"./Dropdown.6fe64b76.js";import"./index.61964446.js";import"./Portal.a4c68d61.js";import"./type.4482a080.js";import"./Overflow.7a0e3cac.js";import"./statusUtils.077f8a48.js";import"./context.24d2ae58.js";import"./_baseIsEqual.08bd8828.js";import"./omit.fd69d8d2.js";import"./PlusOutlined.c73517e2.js";import"./styleChecker.d685456c.js";import"./button.aa0bb50b.js";import"./index.11df8be1.js";import"./isSymbol.5f361b44.js";import"./index.9ea41163.js";import"./Helmet.0418c866.js";import"./index.10921ee9.js";import"./index.ef4e31c1.js";import"./identity.bf2ac13f.js";import"./index.2f0a4123.js";import"./row.b57345b2.js";import"./responsiveObserve.57a0a6d3.js";import"./index.4f67b986.js";import"./iconUtil.02bc4596.js";import"./pickAttrs.38f17648.js";import"./SearchOutlined.7a88f9ff.js";import"./index.445b6a21.js";import"./workbenchContext.3d2abc29.js";import"./parameter.aff251c0.js";import"./utils.c9742588.js";import"./PortalWrapper.eb4c9ec4.js";import"./index.6d8ed736.js";import"./state-local.735e622b.js";import"./index.4c04c22e.js";import"./dayjs.min.bdeb7890.js";import"./DoubleRightOutlined.3d4f0e16.js";import"./getDefaultCode.40c4b411.js";import"./Breadcrumb.9423f423.js";import"./index.c0722274.js";import"./RightOutlined.93d63f13.js";import"./Sider.d20f3d2a.js";import"./index.837f2673.js";import"./EyeOutlined.7a3a19f7.js";import"./index.cf3f625b.js";import"./main.6fe01a4a.js";var B=Object.defineProperty,l=(t,n)=>B(t,"name",{value:n,configurable:!0});const M=[A,G,x,V,q,W,_,k,K,O,H,Y];function w(t,n,r,p,i){const e=T.filter(a=>!(a===I||a===U||p&&a===Q));return r&&Array.prototype.push.apply(e,r),i&&Array.prototype.push.apply(e,M),E(t,n,e).filter(a=>{if(a.message.indexOf("Unknown directive")!==-1&&a.nodes){const s=a.nodes[0];if(s&&s.kind===z.DIRECTIVE){const m=s.name.value;if(m==="arguments"||m==="argumentDefinitions")return!1}}return!0})}l(w,"validateWithCustomRules");const u={Error:"Error",Warning:"Warning",Information:"Information",Hint:"Hint"},g={[u.Error]:1,[u.Warning]:2,[u.Information]:3,[u.Hint]:4},f=l((t,n)=>{if(!t)throw new Error(n)},"invariant");function N(t,n=null,r,p,i){var e,o;let a=null;i&&(typeof i=="string"?t+=`

`+i:t+=`

`+i.reduce((s,m)=>(s+=F(m)+`

`,s),""));try{a=$(t)}catch(s){if(s instanceof j){const m=D((o=(e=s.locations)===null||e===void 0?void 0:e[0])!==null&&o!==void 0?o:{line:0,column:0},t);return[{severity:g.Error,message:s.message,source:"GraphQL: Syntax",range:m}]}throw s}return C(a,n,r,p)}l(N,"getDiagnostics");function C(t,n=null,r,p){if(!n)return[];const i=h(w(n,t,r,p),o=>v(o,g.Error,"Validation")),e=h(E(n,t,[S]),o=>v(o,g.Warning,"Deprecation"));return i.concat(e)}l(C,"validateQuery");function h(t,n){return Array.prototype.concat.apply([],t.map(n))}l(h,"mapCat");function v(t,n,r){if(!t.nodes)return[];const p=[];return t.nodes.forEach(i=>{const e=i.kind!=="Variable"&&"name"in i&&i.name!==void 0?i.name:"variable"in i&&i.variable!==void 0?i.variable:i;if(e){f(t.locations,"GraphQL validation error requires locations.");const o=t.locations[0],a=L(e),s=o.column+(a.end-a.start);p.push({source:`GraphQL: ${r}`,message:t.message,severity:n,range:new y(new c(o.line-1,o.column-1),new c(o.line-1,s))})}}),p}l(v,"annotations");function D(t,n){const r=P(),p=r.startState(),i=n.split(`
`);f(i.length>=t.line,"Query text must have more lines than where the error happened");let e=null;for(let m=0;m<t.line;m++)for(e=new b(i[m]);!e.eol()&&r.token(e,p)!=="invalidchar";);f(e,"Expected Parser stream to be available.");const o=t.line-1,a=e.getStartOfToken(),s=e.getCurrentPosition();return new y(new c(o,a),new c(o,s))}l(D,"getRange");function L(t){const r=t.loc;return f(r,"Expected ASTNode to have a location."),r}l(L,"getLocation");const R=["error","warning","information","hint"],J={"GraphQL: Validation":"validation","GraphQL: Deprecation":"deprecation","GraphQL: Syntax":"syntax"};d.registerHelper("lint","graphql",(t,n)=>{const r=n.schema;return N(t,r,n.validationRules,void 0,n.externalFragments).map(e=>({message:e.message,severity:e.severity?R[e.severity-1]:R[0],type:e.source?J[e.source]:void 0,from:d.Pos(e.range.start.line,e.range.start.character),to:d.Pos(e.range.end.line,e.range.end.character)}))});
